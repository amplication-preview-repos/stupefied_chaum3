/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Parcel as PrismaParcel } from "@prisma/client";

export class ParcelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ParcelCountArgs, "select">): Promise<number> {
    return this.prisma.parcel.count(args);
  }

  async parcels(args: Prisma.ParcelFindManyArgs): Promise<PrismaParcel[]> {
    return this.prisma.parcel.findMany(args);
  }
  async parcel(
    args: Prisma.ParcelFindUniqueArgs
  ): Promise<PrismaParcel | null> {
    return this.prisma.parcel.findUnique(args);
  }
  async createParcel(args: Prisma.ParcelCreateArgs): Promise<PrismaParcel> {
    return this.prisma.parcel.create(args);
  }
  async updateParcel(args: Prisma.ParcelUpdateArgs): Promise<PrismaParcel> {
    return this.prisma.parcel.update(args);
  }
  async deleteParcel(args: Prisma.ParcelDeleteArgs): Promise<PrismaParcel> {
    return this.prisma.parcel.delete(args);
  }
}
